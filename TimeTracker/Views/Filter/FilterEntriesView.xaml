<UserControl x:Class="TimeTracker.Views.Filter.FilterEntriesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <StackPanel>
        <!-- Filter by Category -->
        <GroupBox>
            <GroupBox.Header>
                <TextBlock Text="{DynamicResource Str_Category}"
                           Padding="5"
                           FontWeight="Bold" />  
            </GroupBox.Header>
            
            <StackPanel>
                <!-- Checkboxes for the single Categories -->
                <ListBox ItemsSource="{Binding CategorySelections}"
                         DisplayMemberPath="Key.Name"
                         SelectionMode="Multiple"
                         VerticalAlignment="Stretch"
                         BorderThickness="0"
                         Padding="5"
                         Margin="5">
                    <!-- 
                        Use Interaction.Triggers to bind the events to commands.
                        With the elements XML properties, only Code-Behind methods can be called.
                    -->
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="SelectionChanged">
                            <b:InvokeCommandAction Command="{Binding ApplyFiltersCommand}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    
                    <!-- Display items as checkboxes -->
                    <ListBox.Resources>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="IsSelected" Value="{Binding Value}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <CheckBox Margin="5"
                                                  IsChecked="{Binding Value}">
                                            <ContentPresenter />
                                        </CheckBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
                
                <!-- Select all Categories -->
                <Button Content="{DynamicResource Str_SelectAll}"
                        Padding="5"
                        Margin="5,5,5,0"
                        Style="{StaticResource Button}"
                        Command="{Binding SelectAllCategoriesCommand}" />
                    
                <!-- Unselect all Categories -->
                <Button Content="{DynamicResource Str_UnselectAll}"
                        Padding="5"
                        Margin="5"
                        Style="{StaticResource Button}"
                        Command="{Binding UnselectAllCategoriesCommand}" />
            </StackPanel>
        </GroupBox>
        
        <!-- Filter by Notes -->
        <GroupBox Margin="0,15,0,0">
            <GroupBox.Header>
                <TextBlock Text="{DynamicResource Str_EntryNotes}"
                           Padding="5"
                           FontWeight="Bold" />  
            </GroupBox.Header>
            
            <StackPanel>
                <TextBox VerticalContentAlignment="Center"
                         Padding="3"
                         Margin="10,5"
                         Text="{Binding InputNotes, UpdateSourceTrigger=PropertyChanged}"
                         GotFocus="TextBox_OnGotFocus">
                    <!-- 
                        Use Interaction.Triggers to bind events to commands.
                        With the elements XML properties, only Code-Behind methods can be called.
                    -->
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="TextChanged">
                            <b:InvokeCommandAction Command="{Binding ApplyFiltersCommand}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </TextBox>
                    
                <!-- Clear -->
                <Button Content="{DynamicResource Str_Clear}"
                        Padding="5"
                        Margin="5"
                        Style="{StaticResource Button}"
                        Command="{Binding ClearNotesCommand}" />
            </StackPanel>
        </GroupBox> 
        
        <!-- Filter by Date -->
        <GroupBox Margin="0,15,0,0">
            <GroupBox.Header>
                <TextBlock Text="{DynamicResource Str_Date}"
                           Padding="5"
                           FontWeight="Bold" />  
            </GroupBox.Header>
            
            <StackPanel>
                <!-- Min date -->
                <StackPanel>
                    <!-- Header -->
                    <Label Content="{DynamicResource Str_From}"
                           Margin="5,0" />
                    
                    <!-- Select date -->
                    <DatePicker Margin="10,5"
                                Focusable="False"
                                SelectedDate="{Binding InputDateMin}">
                        <!-- 
                            Use Interaction.Triggers to bind the events to commands.
                            With the elements XML properties, only Code-Behind methods can be called.
                        -->
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectedDateChanged">
                                <b:InvokeCommandAction Command="{Binding ApplyFiltersCommand}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </DatePicker>
                        
                    <!-- Clear -->
                    <Button Content="{DynamicResource Str_Clear}"
                            Padding="5"
                            Margin="5"
                            Style="{StaticResource Button}"
                            Command="{Binding ClearInputDateMinCommand}" />
                </StackPanel>
                
                <!-- Max date -->
                <StackPanel>
                    <!-- Header -->
                    <Label Content="{DynamicResource Str_To}"
                           Margin="5,0" />
                    
                    <!-- Select date -->
                    <DatePicker Margin="10,5"
                                Focusable="False"
                                SelectedDate="{Binding InputDateMax}">
                        <!-- 
                            Use Interaction.Triggers to bind the events to commands.
                            With the elements XML properties, only Code-Behind methods can be called.
                        -->
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectedDateChanged">
                                <b:InvokeCommandAction Command="{Binding ApplyFiltersCommand}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </DatePicker>
                        
                    <!-- Clear -->
                    <Button Content="{DynamicResource Str_Clear}"
                            Padding="5"
                            Margin="5"
                            Style="{StaticResource Button}"
                            Command="{Binding ClearInputDateMaxCommand}" />
                </StackPanel>
            </StackPanel>
        </GroupBox> 
    </StackPanel>
</UserControl>
