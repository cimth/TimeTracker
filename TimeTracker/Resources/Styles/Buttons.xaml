<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Normal Button -->
    <Style x:Key="Button" TargetType="{x:Type Button}">
        <!-- Default state -->
        <!-- Note: The Template has to be overwritten for changing the IsChecked color etc. -->
        <Setter Property="Background" Value="{StaticResource AppLightBrush}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}" >
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- Overwrite on different states. -->
        <Style.Triggers>
            <!-- IsMouseOver -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AppHighlightedBrush}" />
            </Trigger>
            
            <!-- IsEnabled -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource AppLightDisabledBrush}" />
                <Setter Property="Foreground" Value="{StaticResource AppLightDisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Toggle Button -->
    <Style x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
        <!-- Default state -->
        <!-- Note: The Template has to be overwritten for changing the IsChecked color etc. -->
        <Setter Property="Background" Value="{StaticResource AppLightBrush}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}" >
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- Overwrite on different states. -->
        <Style.Triggers>
            <!-- IsMouseOver -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AppHighlightedBrush}" />
            </Trigger>
            
            <!-- IsChecked -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource AppSelectedMediumBrush}" />
            </Trigger>
            
            <!-- IsMouseOver AND IsChecked -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                
                <Setter Property="Background" Value="{StaticResource AppHighlightedBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>